"use strict";function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}// collect element image with .injectable
SVGInject(document.querySelectorAll("img.injectable")),document.addEventListener("DOMContentLoaded",function(){(function lazyLoadImages(){// make a promise to get all images with a class "lazy"
return new Promise(function(a,b){var c=document.querySelectorAll("img.lazy");0>=c.length&&b(Error("No Images has been Found")),a(c)})})().then(function(a){document.addEventListener("scroll",function(){a.forEach(function(a){20>=a.getBoundingClientRect().top&&(a.src=a.dataset.src,a.classList.contains("lazy")&&a.classList.remove("lazy"))})})}).catch(function(a){return console.error(a)});var a,b=document.querySelector("#searchToggle"),c=document.querySelector("#searchClose"),d=document.querySelector("#searchInputContainer"),e=document.querySelector("#searchInput"),f=document.querySelector("#searchResult");c.addEventListener("click",function(){document.documentElement.classList.toggle("overflow-hidden"),d.classList.toggle("hidden")}),b.addEventListener("click",function(){document.documentElement.classList.toggle("overflow-hidden"),d.classList.toggle("hidden")}),window.addEventListener("keydown",function(a){"/"===a.key&&(a.preventDefault(),e.focus())}),window.addEventListener("keydown",function(a){27===a.keyCode&&(e.value="",f.innerHTML="",e.blur())});/**
     * Get the posts lists in json format.
     */var g=/*#__PURE__*/function(){var a=_asyncToGenerator(function*(){var a=yield fetch("/index.json"),b=yield a.json();return b});return function(){return a.apply(this,arguments)}}(),h=function(b,c){var d,e;b=new RegExp(b,"i"),d=a.filter(function(a){return b.test(a.title)}),e=d.map(function(a){return"<li>\n            <a class=\"block mb-2 px-2 py-4 border-b-1 border-gray-200 hover:bg-gray-800 overflow-hidden rounded-lg hover:text-white\" href=\"".concat(a.url,"\">\n                ").concat(a.title,"\n            </a>\n        </li>")}),c.classList.add("block"),e.unshift("<p class=\"p-2 mb-2 text-sm text-gray-800 text-opacity-50\">click outside the input to cancel search.</p>"),c.innerHTML=e.join("")},i=function(a,b){e.addEventListener(a,b)};/**
     * @param query, element.
     * query: the keyword that user given.
     * element: target element to show the result.
     */ /**
     * When user focus on the search input, function getPostsJSON called.
     */ /**
     * filtering result with the query that user given on search input.
     */i("click",function(b){b.stopPropagation(),g().then(function(b){return a=b})}),i("keyup",function(a){return h(a.target.value,f)}),document.addEventListener("click",function(){f.innerHTML="",e.value="",e.blur()},!1),function(){return new Promise(function(a,b){var c={toc:document.querySelector("#toc"),tocControl:document.querySelector("#tocControl"),tocItems:document.querySelectorAll("#TableOfContents a")};c?a(c):b("Cannot find any table of contents in this page")})}().then(function(a){var{toc:b,tocControl:c,tocItems:d}=a;c.addEventListener("click",function(){document.documentElement.classList.toggle("overflow-hidden"),b.classList.toggle("hidden")}),b.addEventListener("click",function(){b.classList.contains("hidden")||b.classList.add("hidden"),document.documentElement.classList.toggle("overflow-hidden")}),d.forEach(function(a){return a.addEventListener("click",function(a){a.stopPropagation(),b.classList.add("hidden"),document.documentElement.classList.contains("overflow-hidden")&&document.documentElement.classList.remove("overflow-hidden")})})}).catch(function(a){return console.log(a)})});